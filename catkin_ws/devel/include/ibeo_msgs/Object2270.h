// Generated by gencpp from file ibeo_msgs/Object2270.msg
// DO NOT EDIT!


#ifndef IBEO_MSGS_MESSAGE_OBJECT2270_H
#define IBEO_MSGS_MESSAGE_OBJECT2270_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <ibeo_msgs/Point2Di.h>

namespace ibeo_msgs
{
template <class ContainerAllocator>
struct Object2270_
{
  typedef Object2270_<ContainerAllocator> Type;

  Object2270_()
    : id(0)
    , age(0)
    , prediction_age(0)
    , relative_moment_of_measurement(0)
    , reference_point_location(0)
    , reference_point_position_x(0)
    , reference_point_position_y(0)
    , reference_point_position_sigma_x(0)
    , reference_point_position_sigma_y(0)
    , contour_points_cog_x(0)
    , contour_points_cog_y(0)
    , object_box_length(0)
    , object_box_width(0)
    , object_box_orientation_angle(0)
    , object_box_orientation_angle_sigma(0)
    , absolute_velocity_x(0)
    , absolute_velocity_y(0)
    , absolute_velocity_sigma_x(0)
    , absolute_velocity_sigma_y(0)
    , relative_velocity_x(0)
    , relative_velocity_y(0)
    , relative_velocity_sigma_x(0)
    , relative_velocity_sigma_y(0)
    , classification(0)
    , tracking_model(0)
    , mobile_detected(false)
    , track_valid(false)
    , classification_age(0)
    , classification_confidence(0)
    , number_of_contour_points(0)
    , contour_point_list()  {
    }
  Object2270_(const ContainerAllocator& _alloc)
    : id(0)
    , age(0)
    , prediction_age(0)
    , relative_moment_of_measurement(0)
    , reference_point_location(0)
    , reference_point_position_x(0)
    , reference_point_position_y(0)
    , reference_point_position_sigma_x(0)
    , reference_point_position_sigma_y(0)
    , contour_points_cog_x(0)
    , contour_points_cog_y(0)
    , object_box_length(0)
    , object_box_width(0)
    , object_box_orientation_angle(0)
    , object_box_orientation_angle_sigma(0)
    , absolute_velocity_x(0)
    , absolute_velocity_y(0)
    , absolute_velocity_sigma_x(0)
    , absolute_velocity_sigma_y(0)
    , relative_velocity_x(0)
    , relative_velocity_y(0)
    , relative_velocity_sigma_x(0)
    , relative_velocity_sigma_y(0)
    , classification(0)
    , tracking_model(0)
    , mobile_detected(false)
    , track_valid(false)
    , classification_age(0)
    , classification_confidence(0)
    , number_of_contour_points(0)
    , contour_point_list(_alloc)  {
  (void)_alloc;
    }



   typedef uint16_t _id_type;
  _id_type id;

   typedef uint16_t _age_type;
  _age_type age;

   typedef uint16_t _prediction_age_type;
  _prediction_age_type prediction_age;

   typedef uint16_t _relative_moment_of_measurement_type;
  _relative_moment_of_measurement_type relative_moment_of_measurement;

   typedef uint8_t _reference_point_location_type;
  _reference_point_location_type reference_point_location;

   typedef int16_t _reference_point_position_x_type;
  _reference_point_position_x_type reference_point_position_x;

   typedef int16_t _reference_point_position_y_type;
  _reference_point_position_y_type reference_point_position_y;

   typedef uint16_t _reference_point_position_sigma_x_type;
  _reference_point_position_sigma_x_type reference_point_position_sigma_x;

   typedef uint16_t _reference_point_position_sigma_y_type;
  _reference_point_position_sigma_y_type reference_point_position_sigma_y;

   typedef int16_t _contour_points_cog_x_type;
  _contour_points_cog_x_type contour_points_cog_x;

   typedef int16_t _contour_points_cog_y_type;
  _contour_points_cog_y_type contour_points_cog_y;

   typedef uint16_t _object_box_length_type;
  _object_box_length_type object_box_length;

   typedef uint16_t _object_box_width_type;
  _object_box_width_type object_box_width;

   typedef int16_t _object_box_orientation_angle_type;
  _object_box_orientation_angle_type object_box_orientation_angle;

   typedef int16_t _object_box_orientation_angle_sigma_type;
  _object_box_orientation_angle_sigma_type object_box_orientation_angle_sigma;

   typedef int16_t _absolute_velocity_x_type;
  _absolute_velocity_x_type absolute_velocity_x;

   typedef int16_t _absolute_velocity_y_type;
  _absolute_velocity_y_type absolute_velocity_y;

   typedef uint16_t _absolute_velocity_sigma_x_type;
  _absolute_velocity_sigma_x_type absolute_velocity_sigma_x;

   typedef uint16_t _absolute_velocity_sigma_y_type;
  _absolute_velocity_sigma_y_type absolute_velocity_sigma_y;

   typedef int16_t _relative_velocity_x_type;
  _relative_velocity_x_type relative_velocity_x;

   typedef int16_t _relative_velocity_y_type;
  _relative_velocity_y_type relative_velocity_y;

   typedef uint16_t _relative_velocity_sigma_x_type;
  _relative_velocity_sigma_x_type relative_velocity_sigma_x;

   typedef uint16_t _relative_velocity_sigma_y_type;
  _relative_velocity_sigma_y_type relative_velocity_sigma_y;

   typedef uint8_t _classification_type;
  _classification_type classification;

   typedef uint8_t _tracking_model_type;
  _tracking_model_type tracking_model;

   typedef uint8_t _mobile_detected_type;
  _mobile_detected_type mobile_detected;

   typedef uint8_t _track_valid_type;
  _track_valid_type track_valid;

   typedef uint16_t _classification_age_type;
  _classification_age_type classification_age;

   typedef uint16_t _classification_confidence_type;
  _classification_confidence_type classification_confidence;

   typedef uint16_t _number_of_contour_points_type;
  _number_of_contour_points_type number_of_contour_points;

   typedef std::vector< ::ibeo_msgs::Point2Di_<ContainerAllocator> , typename ContainerAllocator::template rebind< ::ibeo_msgs::Point2Di_<ContainerAllocator> >::other >  _contour_point_list_type;
  _contour_point_list_type contour_point_list;



  enum {
    CENTER_OF_GRAVITY = 0u,
    TOP_FRONT_LEFT_CORNER = 1u,
    TOP_FRONT_RIGHT_CORNER = 2u,
    BOTTOM_REAR_RIGHT_CORNER = 3u,
    BOTTOM_REAR_LEFT_CORNER = 4u,
    CENTER_OF_TOP_FRONT_EDGE = 5u,
    CENTER_OF_RIGHT_EDGE = 6u,
    CENTER_OF_BOTTOM_REAR_EDGE = 7u,
    CENTER_OF_LEFT_EDGE = 8u,
    BOX_CENTER = 9u,
    INVALID = 255u,
    UNCLASSIFIED = 0u,
    UNKNOWN_SMALL = 1u,
    UNKNOWN_BIG = 2u,
    PEDESTRIAN = 3u,
    BIKE = 4u,
    CAR = 5u,
    TRUCK = 6u,
    OVER_DRIVABLE = 10u,
    UNDER_DRIVABLE = 11u,
    DYNAMIC_MODEL = 0u,
    STATIC_MODEL = 1u,
  };


  typedef boost::shared_ptr< ::ibeo_msgs::Object2270_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::ibeo_msgs::Object2270_<ContainerAllocator> const> ConstPtr;

}; // struct Object2270_

typedef ::ibeo_msgs::Object2270_<std::allocator<void> > Object2270;

typedef boost::shared_ptr< ::ibeo_msgs::Object2270 > Object2270Ptr;
typedef boost::shared_ptr< ::ibeo_msgs::Object2270 const> Object2270ConstPtr;

// constants requiring out of line definition

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::ibeo_msgs::Object2270_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::ibeo_msgs::Object2270_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace ibeo_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': False, 'IsMessage': True, 'HasHeader': False}
// {'ibeo_msgs': ['/home/kratos/OFRN/catkin_ws/src/ibeo_msgs/msg'], 'std_msgs': ['/opt/ros/kinetic/share/std_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::ibeo_msgs::Object2270_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::ibeo_msgs::Object2270_<ContainerAllocator> const>
  : FalseType
  { };

template <class ContainerAllocator>
struct IsMessage< ::ibeo_msgs::Object2270_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::ibeo_msgs::Object2270_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::ibeo_msgs::Object2270_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::ibeo_msgs::Object2270_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::ibeo_msgs::Object2270_<ContainerAllocator> >
{
  static const char* value()
  {
    return "be71fe5a58662c19b2a4ddd8ff915219";
  }

  static const char* value(const ::ibeo_msgs::Object2270_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xbe71fe5a58662c19ULL;
  static const uint64_t static_value2 = 0xb2a4ddd8ff915219ULL;
};

template<class ContainerAllocator>
struct DataType< ::ibeo_msgs::Object2270_<ContainerAllocator> >
{
  static const char* value()
  {
    return "ibeo_msgs/Object2270";
  }

  static const char* value(const ::ibeo_msgs::Object2270_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::ibeo_msgs::Object2270_<ContainerAllocator> >
{
  static const char* value()
  {
    return "uint16 id\n\
uint16 age\n\
uint16 prediction_age\n\
uint16 relative_moment_of_measurement\n\
uint8 reference_point_location\n\
int16 reference_point_position_x\n\
int16 reference_point_position_y\n\
uint16 reference_point_position_sigma_x\n\
uint16 reference_point_position_sigma_y\n\
int16 contour_points_cog_x\n\
int16 contour_points_cog_y\n\
uint16 object_box_length\n\
uint16 object_box_width\n\
int16 object_box_orientation_angle\n\
int16 object_box_orientation_angle_sigma\n\
int16 absolute_velocity_x\n\
int16 absolute_velocity_y\n\
uint16 absolute_velocity_sigma_x\n\
uint16 absolute_velocity_sigma_y\n\
int16 relative_velocity_x\n\
int16 relative_velocity_y\n\
uint16 relative_velocity_sigma_x\n\
uint16 relative_velocity_sigma_y\n\
uint8 classification\n\
uint8 tracking_model\n\
bool mobile_detected\n\
bool track_valid\n\
uint16 classification_age\n\
uint16 classification_confidence\n\
uint16 number_of_contour_points\n\
Point2Di[] contour_point_list\n\
\n\
# reference_point_location values\n\
uint8 CENTER_OF_GRAVITY=0\n\
uint8 TOP_FRONT_LEFT_CORNER=1\n\
uint8 TOP_FRONT_RIGHT_CORNER=2\n\
uint8 BOTTOM_REAR_RIGHT_CORNER=3\n\
uint8 BOTTOM_REAR_LEFT_CORNER=4\n\
uint8 CENTER_OF_TOP_FRONT_EDGE=5\n\
uint8 CENTER_OF_RIGHT_EDGE=6\n\
uint8 CENTER_OF_BOTTOM_REAR_EDGE=7\n\
uint8 CENTER_OF_LEFT_EDGE=8\n\
uint8 BOX_CENTER=9\n\
uint8 INVALID=255\n\
\n\
# classification values\n\
uint8 UNCLASSIFIED=0\n\
uint8 UNKNOWN_SMALL=1\n\
uint8 UNKNOWN_BIG=2\n\
uint8 PEDESTRIAN=3\n\
uint8 BIKE=4\n\
uint8 CAR=5\n\
uint8 TRUCK=6\n\
uint8 OVER_DRIVABLE=10\n\
uint8 UNDER_DRIVABLE=11\n\
\n\
# tracking_model values\n\
uint8 DYNAMIC_MODEL=0\n\
uint8 STATIC_MODEL=1\n\
\n\
================================================================================\n\
MSG: ibeo_msgs/Point2Di\n\
int16 x\n\
int16 y\n\
";
  }

  static const char* value(const ::ibeo_msgs::Object2270_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::ibeo_msgs::Object2270_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.id);
      stream.next(m.age);
      stream.next(m.prediction_age);
      stream.next(m.relative_moment_of_measurement);
      stream.next(m.reference_point_location);
      stream.next(m.reference_point_position_x);
      stream.next(m.reference_point_position_y);
      stream.next(m.reference_point_position_sigma_x);
      stream.next(m.reference_point_position_sigma_y);
      stream.next(m.contour_points_cog_x);
      stream.next(m.contour_points_cog_y);
      stream.next(m.object_box_length);
      stream.next(m.object_box_width);
      stream.next(m.object_box_orientation_angle);
      stream.next(m.object_box_orientation_angle_sigma);
      stream.next(m.absolute_velocity_x);
      stream.next(m.absolute_velocity_y);
      stream.next(m.absolute_velocity_sigma_x);
      stream.next(m.absolute_velocity_sigma_y);
      stream.next(m.relative_velocity_x);
      stream.next(m.relative_velocity_y);
      stream.next(m.relative_velocity_sigma_x);
      stream.next(m.relative_velocity_sigma_y);
      stream.next(m.classification);
      stream.next(m.tracking_model);
      stream.next(m.mobile_detected);
      stream.next(m.track_valid);
      stream.next(m.classification_age);
      stream.next(m.classification_confidence);
      stream.next(m.number_of_contour_points);
      stream.next(m.contour_point_list);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct Object2270_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::ibeo_msgs::Object2270_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::ibeo_msgs::Object2270_<ContainerAllocator>& v)
  {
    s << indent << "id: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.id);
    s << indent << "age: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.age);
    s << indent << "prediction_age: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.prediction_age);
    s << indent << "relative_moment_of_measurement: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.relative_moment_of_measurement);
    s << indent << "reference_point_location: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.reference_point_location);
    s << indent << "reference_point_position_x: ";
    Printer<int16_t>::stream(s, indent + "  ", v.reference_point_position_x);
    s << indent << "reference_point_position_y: ";
    Printer<int16_t>::stream(s, indent + "  ", v.reference_point_position_y);
    s << indent << "reference_point_position_sigma_x: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.reference_point_position_sigma_x);
    s << indent << "reference_point_position_sigma_y: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.reference_point_position_sigma_y);
    s << indent << "contour_points_cog_x: ";
    Printer<int16_t>::stream(s, indent + "  ", v.contour_points_cog_x);
    s << indent << "contour_points_cog_y: ";
    Printer<int16_t>::stream(s, indent + "  ", v.contour_points_cog_y);
    s << indent << "object_box_length: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.object_box_length);
    s << indent << "object_box_width: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.object_box_width);
    s << indent << "object_box_orientation_angle: ";
    Printer<int16_t>::stream(s, indent + "  ", v.object_box_orientation_angle);
    s << indent << "object_box_orientation_angle_sigma: ";
    Printer<int16_t>::stream(s, indent + "  ", v.object_box_orientation_angle_sigma);
    s << indent << "absolute_velocity_x: ";
    Printer<int16_t>::stream(s, indent + "  ", v.absolute_velocity_x);
    s << indent << "absolute_velocity_y: ";
    Printer<int16_t>::stream(s, indent + "  ", v.absolute_velocity_y);
    s << indent << "absolute_velocity_sigma_x: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.absolute_velocity_sigma_x);
    s << indent << "absolute_velocity_sigma_y: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.absolute_velocity_sigma_y);
    s << indent << "relative_velocity_x: ";
    Printer<int16_t>::stream(s, indent + "  ", v.relative_velocity_x);
    s << indent << "relative_velocity_y: ";
    Printer<int16_t>::stream(s, indent + "  ", v.relative_velocity_y);
    s << indent << "relative_velocity_sigma_x: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.relative_velocity_sigma_x);
    s << indent << "relative_velocity_sigma_y: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.relative_velocity_sigma_y);
    s << indent << "classification: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.classification);
    s << indent << "tracking_model: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.tracking_model);
    s << indent << "mobile_detected: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.mobile_detected);
    s << indent << "track_valid: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.track_valid);
    s << indent << "classification_age: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.classification_age);
    s << indent << "classification_confidence: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.classification_confidence);
    s << indent << "number_of_contour_points: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.number_of_contour_points);
    s << indent << "contour_point_list[]" << std::endl;
    for (size_t i = 0; i < v.contour_point_list.size(); ++i)
    {
      s << indent << "  contour_point_list[" << i << "]: ";
      s << std::endl;
      s << indent;
      Printer< ::ibeo_msgs::Point2Di_<ContainerAllocator> >::stream(s, indent + "    ", v.contour_point_list[i]);
    }
  }
};

} // namespace message_operations
} // namespace ros

#endif // IBEO_MSGS_MESSAGE_OBJECT2270_H
