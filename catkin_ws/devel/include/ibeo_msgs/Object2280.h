// Generated by gencpp from file ibeo_msgs/Object2280.msg
// DO NOT EDIT!


#ifndef IBEO_MSGS_MESSAGE_OBJECT2280_H
#define IBEO_MSGS_MESSAGE_OBJECT2280_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <ibeo_msgs/Point2Df.h>
#include <ibeo_msgs/Point2Df.h>
#include <ibeo_msgs/Point2Df.h>
#include <ibeo_msgs/Point2Df.h>
#include <ibeo_msgs/Point2Df.h>
#include <ibeo_msgs/Point2Df.h>
#include <ibeo_msgs/Point2Df.h>
#include <ibeo_msgs/Point2Df.h>
#include <ibeo_msgs/Point2Df.h>
#include <ibeo_msgs/Point2Df.h>

namespace ibeo_msgs
{
template <class ContainerAllocator>
struct Object2280_
{
  typedef Object2280_<ContainerAllocator> Type;

  Object2280_()
    : id(0)
    , tracking_model(0)
    , mobility_of_dyn_object_detected(false)
    , motion_model_validated(false)
    , object_age(0)
    , timestamp()
    , object_prediction_age(0)
    , classification(0)
    , classification_certainty(0)
    , classification_age(0)
    , object_box_center()
    , object_box_center_sigma()
    , object_box_size()
    , object_box_orientation_angle(0.0)
    , object_box_orientation_angle_sigma(0.0)
    , relative_velocity()
    , relative_velocity_sigma()
    , absolute_velocity()
    , absolute_velocity_sigma()
    , number_of_contour_points(0)
    , closest_point_index(0)
    , reference_point_location(0)
    , reference_point_coordinate()
    , reference_point_coordinate_sigma()
    , reference_point_position_correction_coefficient(0.0)
    , object_priority(0)
    , object_existence_measurement(0.0)
    , contour_point_list()  {
    }
  Object2280_(const ContainerAllocator& _alloc)
    : id(0)
    , tracking_model(0)
    , mobility_of_dyn_object_detected(false)
    , motion_model_validated(false)
    , object_age(0)
    , timestamp()
    , object_prediction_age(0)
    , classification(0)
    , classification_certainty(0)
    , classification_age(0)
    , object_box_center(_alloc)
    , object_box_center_sigma(_alloc)
    , object_box_size(_alloc)
    , object_box_orientation_angle(0.0)
    , object_box_orientation_angle_sigma(0.0)
    , relative_velocity(_alloc)
    , relative_velocity_sigma(_alloc)
    , absolute_velocity(_alloc)
    , absolute_velocity_sigma(_alloc)
    , number_of_contour_points(0)
    , closest_point_index(0)
    , reference_point_location(0)
    , reference_point_coordinate(_alloc)
    , reference_point_coordinate_sigma(_alloc)
    , reference_point_position_correction_coefficient(0.0)
    , object_priority(0)
    , object_existence_measurement(0.0)
    , contour_point_list(_alloc)  {
  (void)_alloc;
    }



   typedef uint16_t _id_type;
  _id_type id;

   typedef uint8_t _tracking_model_type;
  _tracking_model_type tracking_model;

   typedef uint8_t _mobility_of_dyn_object_detected_type;
  _mobility_of_dyn_object_detected_type mobility_of_dyn_object_detected;

   typedef uint8_t _motion_model_validated_type;
  _motion_model_validated_type motion_model_validated;

   typedef uint32_t _object_age_type;
  _object_age_type object_age;

   typedef ros::Time _timestamp_type;
  _timestamp_type timestamp;

   typedef uint16_t _object_prediction_age_type;
  _object_prediction_age_type object_prediction_age;

   typedef uint8_t _classification_type;
  _classification_type classification;

   typedef uint8_t _classification_certainty_type;
  _classification_certainty_type classification_certainty;

   typedef uint32_t _classification_age_type;
  _classification_age_type classification_age;

   typedef  ::ibeo_msgs::Point2Df_<ContainerAllocator>  _object_box_center_type;
  _object_box_center_type object_box_center;

   typedef  ::ibeo_msgs::Point2Df_<ContainerAllocator>  _object_box_center_sigma_type;
  _object_box_center_sigma_type object_box_center_sigma;

   typedef  ::ibeo_msgs::Point2Df_<ContainerAllocator>  _object_box_size_type;
  _object_box_size_type object_box_size;

   typedef float _object_box_orientation_angle_type;
  _object_box_orientation_angle_type object_box_orientation_angle;

   typedef float _object_box_orientation_angle_sigma_type;
  _object_box_orientation_angle_sigma_type object_box_orientation_angle_sigma;

   typedef  ::ibeo_msgs::Point2Df_<ContainerAllocator>  _relative_velocity_type;
  _relative_velocity_type relative_velocity;

   typedef  ::ibeo_msgs::Point2Df_<ContainerAllocator>  _relative_velocity_sigma_type;
  _relative_velocity_sigma_type relative_velocity_sigma;

   typedef  ::ibeo_msgs::Point2Df_<ContainerAllocator>  _absolute_velocity_type;
  _absolute_velocity_type absolute_velocity;

   typedef  ::ibeo_msgs::Point2Df_<ContainerAllocator>  _absolute_velocity_sigma_type;
  _absolute_velocity_sigma_type absolute_velocity_sigma;

   typedef uint8_t _number_of_contour_points_type;
  _number_of_contour_points_type number_of_contour_points;

   typedef uint8_t _closest_point_index_type;
  _closest_point_index_type closest_point_index;

   typedef uint16_t _reference_point_location_type;
  _reference_point_location_type reference_point_location;

   typedef  ::ibeo_msgs::Point2Df_<ContainerAllocator>  _reference_point_coordinate_type;
  _reference_point_coordinate_type reference_point_coordinate;

   typedef  ::ibeo_msgs::Point2Df_<ContainerAllocator>  _reference_point_coordinate_sigma_type;
  _reference_point_coordinate_sigma_type reference_point_coordinate_sigma;

   typedef float _reference_point_position_correction_coefficient_type;
  _reference_point_position_correction_coefficient_type reference_point_position_correction_coefficient;

   typedef uint16_t _object_priority_type;
  _object_priority_type object_priority;

   typedef float _object_existence_measurement_type;
  _object_existence_measurement_type object_existence_measurement;

   typedef std::vector< ::ibeo_msgs::Point2Df_<ContainerAllocator> , typename ContainerAllocator::template rebind< ::ibeo_msgs::Point2Df_<ContainerAllocator> >::other >  _contour_point_list_type;
  _contour_point_list_type contour_point_list;



  enum {
    DYNAMIC_MODEL = 0u,
    STATIC_MODEL = 1u,
    UNCLASSIFIED = 0u,
    UNKNOWN_SMALL = 1u,
    UNKNOWN_BIG = 2u,
    PEDESTRIAN = 3u,
    BIKE = 4u,
    CAR = 5u,
    TRUCK = 6u,
    UNDER_DRIVABLE = 12u,
    OVER_DRIVABLE = 13u,
    CENTER_OF_GRAVITY = 0u,
    FRONT_LEFT = 1u,
    FRONT_RIGHT = 2u,
    REAR_RIGHT = 3u,
    REAR_LEFT = 4u,
    FRONT_CENTER = 5u,
    RIGHT_CENTER = 6u,
    REAR_CENTER = 7u,
    LEFT_CENTER = 8u,
    OBJECT_CENTER = 9u,
    UNKNOWN = 255u,
  };


  typedef boost::shared_ptr< ::ibeo_msgs::Object2280_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::ibeo_msgs::Object2280_<ContainerAllocator> const> ConstPtr;

}; // struct Object2280_

typedef ::ibeo_msgs::Object2280_<std::allocator<void> > Object2280;

typedef boost::shared_ptr< ::ibeo_msgs::Object2280 > Object2280Ptr;
typedef boost::shared_ptr< ::ibeo_msgs::Object2280 const> Object2280ConstPtr;

// constants requiring out of line definition

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::ibeo_msgs::Object2280_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::ibeo_msgs::Object2280_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace ibeo_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': False, 'IsMessage': True, 'HasHeader': False}
// {'ibeo_msgs': ['/home/kratos/OFRN/catkin_ws/src/ibeo_msgs/msg'], 'std_msgs': ['/opt/ros/kinetic/share/std_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::ibeo_msgs::Object2280_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::ibeo_msgs::Object2280_<ContainerAllocator> const>
  : FalseType
  { };

template <class ContainerAllocator>
struct IsMessage< ::ibeo_msgs::Object2280_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::ibeo_msgs::Object2280_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::ibeo_msgs::Object2280_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::ibeo_msgs::Object2280_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::ibeo_msgs::Object2280_<ContainerAllocator> >
{
  static const char* value()
  {
    return "e8af58f0c0f3f183aa9baedd59c78e59";
  }

  static const char* value(const ::ibeo_msgs::Object2280_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xe8af58f0c0f3f183ULL;
  static const uint64_t static_value2 = 0xaa9baedd59c78e59ULL;
};

template<class ContainerAllocator>
struct DataType< ::ibeo_msgs::Object2280_<ContainerAllocator> >
{
  static const char* value()
  {
    return "ibeo_msgs/Object2280";
  }

  static const char* value(const ::ibeo_msgs::Object2280_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::ibeo_msgs::Object2280_<ContainerAllocator> >
{
  static const char* value()
  {
    return "uint16 id\n\
uint8 tracking_model\n\
bool mobility_of_dyn_object_detected\n\
bool motion_model_validated\n\
uint32 object_age\n\
time timestamp\n\
uint16 object_prediction_age\n\
uint8 classification\n\
uint8 classification_certainty\n\
uint32 classification_age\n\
Point2Df object_box_center\n\
Point2Df object_box_center_sigma\n\
Point2Df object_box_size\n\
float32 object_box_orientation_angle\n\
float32 object_box_orientation_angle_sigma\n\
Point2Df relative_velocity\n\
Point2Df relative_velocity_sigma\n\
Point2Df absolute_velocity\n\
Point2Df absolute_velocity_sigma\n\
uint8 number_of_contour_points\n\
uint8 closest_point_index\n\
uint16 reference_point_location\n\
Point2Df reference_point_coordinate\n\
Point2Df reference_point_coordinate_sigma\n\
float32 reference_point_position_correction_coefficient\n\
uint16 object_priority\n\
float32 object_existence_measurement\n\
Point2Df[] contour_point_list\n\
\n\
# tracking_model values\n\
uint8 DYNAMIC_MODEL=0\n\
uint8 STATIC_MODEL=1\n\
\n\
# classification values\n\
uint8 UNCLASSIFIED=0\n\
uint8 UNKNOWN_SMALL=1\n\
uint8 UNKNOWN_BIG=2\n\
uint8 PEDESTRIAN=3\n\
uint8 BIKE=4\n\
uint8 CAR=5\n\
uint8 TRUCK=6\n\
uint8 UNDER_DRIVABLE=12\n\
uint8 OVER_DRIVABLE=13\n\
\n\
# reference_point_location values\n\
uint16 CENTER_OF_GRAVITY=0\n\
uint16 FRONT_LEFT=1\n\
uint16 FRONT_RIGHT=2\n\
uint16 REAR_RIGHT=3\n\
uint16 REAR_LEFT=4\n\
uint16 FRONT_CENTER=5\n\
uint16 RIGHT_CENTER=6\n\
uint16 REAR_CENTER=7\n\
uint16 LEFT_CENTER=8\n\
uint16 OBJECT_CENTER=9\n\
uint16 UNKNOWN=255\n\
\n\
\n\
================================================================================\n\
MSG: ibeo_msgs/Point2Df\n\
float32 x\n\
float32 y\n\
";
  }

  static const char* value(const ::ibeo_msgs::Object2280_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::ibeo_msgs::Object2280_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.id);
      stream.next(m.tracking_model);
      stream.next(m.mobility_of_dyn_object_detected);
      stream.next(m.motion_model_validated);
      stream.next(m.object_age);
      stream.next(m.timestamp);
      stream.next(m.object_prediction_age);
      stream.next(m.classification);
      stream.next(m.classification_certainty);
      stream.next(m.classification_age);
      stream.next(m.object_box_center);
      stream.next(m.object_box_center_sigma);
      stream.next(m.object_box_size);
      stream.next(m.object_box_orientation_angle);
      stream.next(m.object_box_orientation_angle_sigma);
      stream.next(m.relative_velocity);
      stream.next(m.relative_velocity_sigma);
      stream.next(m.absolute_velocity);
      stream.next(m.absolute_velocity_sigma);
      stream.next(m.number_of_contour_points);
      stream.next(m.closest_point_index);
      stream.next(m.reference_point_location);
      stream.next(m.reference_point_coordinate);
      stream.next(m.reference_point_coordinate_sigma);
      stream.next(m.reference_point_position_correction_coefficient);
      stream.next(m.object_priority);
      stream.next(m.object_existence_measurement);
      stream.next(m.contour_point_list);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct Object2280_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::ibeo_msgs::Object2280_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::ibeo_msgs::Object2280_<ContainerAllocator>& v)
  {
    s << indent << "id: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.id);
    s << indent << "tracking_model: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.tracking_model);
    s << indent << "mobility_of_dyn_object_detected: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.mobility_of_dyn_object_detected);
    s << indent << "motion_model_validated: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.motion_model_validated);
    s << indent << "object_age: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.object_age);
    s << indent << "timestamp: ";
    Printer<ros::Time>::stream(s, indent + "  ", v.timestamp);
    s << indent << "object_prediction_age: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.object_prediction_age);
    s << indent << "classification: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.classification);
    s << indent << "classification_certainty: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.classification_certainty);
    s << indent << "classification_age: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.classification_age);
    s << indent << "object_box_center: ";
    s << std::endl;
    Printer< ::ibeo_msgs::Point2Df_<ContainerAllocator> >::stream(s, indent + "  ", v.object_box_center);
    s << indent << "object_box_center_sigma: ";
    s << std::endl;
    Printer< ::ibeo_msgs::Point2Df_<ContainerAllocator> >::stream(s, indent + "  ", v.object_box_center_sigma);
    s << indent << "object_box_size: ";
    s << std::endl;
    Printer< ::ibeo_msgs::Point2Df_<ContainerAllocator> >::stream(s, indent + "  ", v.object_box_size);
    s << indent << "object_box_orientation_angle: ";
    Printer<float>::stream(s, indent + "  ", v.object_box_orientation_angle);
    s << indent << "object_box_orientation_angle_sigma: ";
    Printer<float>::stream(s, indent + "  ", v.object_box_orientation_angle_sigma);
    s << indent << "relative_velocity: ";
    s << std::endl;
    Printer< ::ibeo_msgs::Point2Df_<ContainerAllocator> >::stream(s, indent + "  ", v.relative_velocity);
    s << indent << "relative_velocity_sigma: ";
    s << std::endl;
    Printer< ::ibeo_msgs::Point2Df_<ContainerAllocator> >::stream(s, indent + "  ", v.relative_velocity_sigma);
    s << indent << "absolute_velocity: ";
    s << std::endl;
    Printer< ::ibeo_msgs::Point2Df_<ContainerAllocator> >::stream(s, indent + "  ", v.absolute_velocity);
    s << indent << "absolute_velocity_sigma: ";
    s << std::endl;
    Printer< ::ibeo_msgs::Point2Df_<ContainerAllocator> >::stream(s, indent + "  ", v.absolute_velocity_sigma);
    s << indent << "number_of_contour_points: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.number_of_contour_points);
    s << indent << "closest_point_index: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.closest_point_index);
    s << indent << "reference_point_location: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.reference_point_location);
    s << indent << "reference_point_coordinate: ";
    s << std::endl;
    Printer< ::ibeo_msgs::Point2Df_<ContainerAllocator> >::stream(s, indent + "  ", v.reference_point_coordinate);
    s << indent << "reference_point_coordinate_sigma: ";
    s << std::endl;
    Printer< ::ibeo_msgs::Point2Df_<ContainerAllocator> >::stream(s, indent + "  ", v.reference_point_coordinate_sigma);
    s << indent << "reference_point_position_correction_coefficient: ";
    Printer<float>::stream(s, indent + "  ", v.reference_point_position_correction_coefficient);
    s << indent << "object_priority: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.object_priority);
    s << indent << "object_existence_measurement: ";
    Printer<float>::stream(s, indent + "  ", v.object_existence_measurement);
    s << indent << "contour_point_list[]" << std::endl;
    for (size_t i = 0; i < v.contour_point_list.size(); ++i)
    {
      s << indent << "  contour_point_list[" << i << "]: ";
      s << std::endl;
      s << indent;
      Printer< ::ibeo_msgs::Point2Df_<ContainerAllocator> >::stream(s, indent + "    ", v.contour_point_list[i]);
    }
  }
};

} // namespace message_operations
} // namespace ros

#endif // IBEO_MSGS_MESSAGE_OBJECT2280_H
