;; Auto-generated. Do not edit!


(when (boundp 'derived_object_msgs::CipvTrack)
  (if (not (find-package "DERIVED_OBJECT_MSGS"))
    (make-package "DERIVED_OBJECT_MSGS"))
  (shadow 'CipvTrack (find-package "DERIVED_OBJECT_MSGS")))
(unless (find-package "DERIVED_OBJECT_MSGS::CIPVTRACK")
  (make-package "DERIVED_OBJECT_MSGS::CIPVTRACK"))

(in-package "ROS")
;;//! \htmlinclude CipvTrack.msg.html
(if (not (find-package "RADAR_MSGS"))
  (ros::roseus-add-msgs "radar_msgs"))
(if (not (find-package "STD_MSGS"))
  (ros::roseus-add-msgs "std_msgs"))


(defclass derived_object_msgs::CipvTrack
  :super ros::object
  :slots (_header _is_valid _track ))

(defmethod derived_object_msgs::CipvTrack
  (:init
   (&key
    ((:header __header) (instance std_msgs::Header :init))
    ((:is_valid __is_valid) nil)
    ((:track __track) (instance radar_msgs::RadarTrack :init))
    )
   (send-super :init)
   (setq _header __header)
   (setq _is_valid __is_valid)
   (setq _track __track)
   self)
  (:header
   (&rest __header)
   (if (keywordp (car __header))
       (send* _header __header)
     (progn
       (if __header (setq _header (car __header)))
       _header)))
  (:is_valid
   (&optional __is_valid)
   (if __is_valid (setq _is_valid __is_valid)) _is_valid)
  (:track
   (&rest __track)
   (if (keywordp (car __track))
       (send* _track __track)
     (progn
       (if __track (setq _track (car __track)))
       _track)))
  (:serialization-length
   ()
   (+
    ;; std_msgs/Header _header
    (send _header :serialization-length)
    ;; bool _is_valid
    1
    ;; radar_msgs/RadarTrack _track
    (send _track :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; std_msgs/Header _header
       (send _header :serialize s)
     ;; bool _is_valid
       (if _is_valid (write-byte -1 s) (write-byte 0 s))
     ;; radar_msgs/RadarTrack _track
       (send _track :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; std_msgs/Header _header
     (send _header :deserialize buf ptr-) (incf ptr- (send _header :serialization-length))
   ;; bool _is_valid
     (setq _is_valid (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;; radar_msgs/RadarTrack _track
     (send _track :deserialize buf ptr-) (incf ptr- (send _track :serialization-length))
   ;;
   self)
  )

(setf (get derived_object_msgs::CipvTrack :md5sum-) "db9a76b43a89517bb97bfea8c670557e")
(setf (get derived_object_msgs::CipvTrack :datatype-) "derived_object_msgs/CipvTrack")
(setf (get derived_object_msgs::CipvTrack :definition-)
      "# Closest In-Path Vehicle Radar Track

std_msgs/Header header

bool is_valid                   # Whether or not the track is a valid CIPV
radar_msgs/RadarTrack track     # The CIPV track

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
# 0: no frame
# 1: global frame
string frame_id

================================================================================
MSG: radar_msgs/RadarTrack
# All variables below are relative to the radar's frame of reference.
# This message is not meant to be used alone but as part of a stamped or array message.

uint16 track_id                             # The ID of this track generated by the radar. If
                                            # the radar does not generate IDs, this is intended as
                                            # a sequential identifier for each track in a scan.

geometry_msgs/Polygon track_shape           # The shape and position of the detection. This polygon
                                            # encompasses a 2D plane which approximates the size and
                                            # shape of the detection based on the distance from the
                                            # radar, the detection angle, the width of all detections
                                            # grouped into this track, and the height of the radar's
                                            # vertical field of view at the detection distance.

geometry_msgs/Vector3 linear_velocity       # Only the x and y components are valid.
geometry_msgs/Vector3 linear_acceleration   # Only the x component is valid.

================================================================================
MSG: geometry_msgs/Polygon
#A specification of a polygon where the first and last points are assumed to be connected
Point32[] points

================================================================================
MSG: geometry_msgs/Point32
# This contains the position of a point in free space(with 32 bits of precision).
# It is recommeded to use Point wherever possible instead of Point32.  
# 
# This recommendation is to promote interoperability.  
#
# This message is designed to take up less space when sending
# lots of points at once, as in the case of a PointCloud.  

float32 x
float32 y
float32 z
================================================================================
MSG: geometry_msgs/Vector3
# This represents a vector in free space. 
# It is only meant to represent a direction. Therefore, it does not
# make sense to apply a translation to it (e.g., when applying a 
# generic rigid transformation to a Vector3, tf2 will only apply the
# rotation). If you want your data to be translatable too, use the
# geometry_msgs/Point message instead.

float64 x
float64 y
float64 z
")



(provide :derived_object_msgs/CipvTrack "db9a76b43a89517bb97bfea8c670557e")


